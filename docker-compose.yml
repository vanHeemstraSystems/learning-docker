version: ‘3.8’

services:

# PostgreSQL Database

postgres:
image: postgres:15-alpine
container_name: learning-docker-db
restart: unless-stopped
environment:
POSTGRES_DB: ${POSTGRES_DB:-taskdb}
POSTGRES_USER: ${POSTGRES_USER:-dbuser}
POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-changeme}
volumes:
- postgres-data:/var/lib/postgresql/data
networks:
- backend-network
healthcheck:
test: [“CMD-SHELL”, “pg_isready -U ${POSTGRES_USER:-dbuser}”]
interval: 10s
timeout: 5s
retries: 5
security_opt:
- no-new-privileges:true
deploy:
resources:
limits:
cpus: ‘0.5’
memory: 512M

# Redis Cache

redis:
image: redis:7-alpine
container_name: learning-docker-cache
restart: unless-stopped
command: redis-server –requirepass ${REDIS_PASSWORD:-redispass}
networks:
- backend-network
healthcheck:
test: [“CMD”, “redis-cli”, “ping”]
interval: 10s
timeout: 5s
retries: 5
security_opt:
- no-new-privileges:true
deploy:
resources:
limits:
cpus: ‘0.25’
memory: 256M

# Flask Backend API

backend:
build:
context: ./backend
dockerfile: Dockerfile
container_name: learning-docker-backend
restart: unless-stopped
environment:
DATABASE_URL: postgresql://${POSTGRES_USER:-dbuser}:${POSTGRES_PASSWORD:-changeme}@postgres:5432/${POSTGRES_DB:-taskdb}
REDIS_URL: redis://:${REDIS_PASSWORD:-redispass}@redis:6379/0
FLASK_ENV: ${FLASK_ENV:-production}
SECRET_KEY: ${SECRET_KEY:-change-this-secret-key}
depends_on:
postgres:
condition: service_healthy
redis:
condition: service_healthy
networks:
- backend-network
- frontend-network
healthcheck:
test: [“CMD”, “curl”, “-f”, “http://localhost:5000/api/health”]
interval: 30s
timeout: 10s
retries: 3
security_opt:
- no-new-privileges:true
read_only: true
tmpfs:
- /tmp
deploy:
resources:
limits:
cpus: ‘0.5’
memory: 512M

# Nginx Reverse Proxy

nginx:
build:
context: ./nginx
dockerfile: Dockerfile
container_name: learning-docker-proxy
restart: unless-stopped
ports:
- “80:80”
- “443:443”
depends_on:
- backend
networks:
- frontend-network
volumes:
- ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
security_opt:
- no-new-privileges:true
deploy:
resources:
limits:
cpus: ‘0.25’
memory: 128M

networks:
backend-network:
driver: bridge
internal: true  # No external access for backend
frontend-network:
driver: bridge

volumes:
postgres-data:
driver: local
